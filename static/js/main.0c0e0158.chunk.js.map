{"version":3,"sources":["Todos.js","AddForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","deleteTodo","todoList","length","map","todo","className","onClick","id","content","AddTodo","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addTodo","onSubmit","this","type","onChange","Component","App","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAgBeA,EAdD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACdC,EAAWF,EAAMG,OAAUH,EAAMI,KAAI,SAACC,GACxC,OACI,qBAAKC,UAAU,kBAAf,SACI,sBAAMC,QAAS,WAAON,EAAWI,EAAKG,KAAtC,SAA6CH,EAAKI,WADhBJ,EAAKG,OAI5C,mBAAGF,UAAU,SAAb,iCACP,OACI,qBAAKA,UAAU,mBAAf,SACKJ,KCmBEQ,E,4MA5BXC,MAAQ,CACJF,QAAS,I,EAEbG,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVL,QAASI,EAAEE,OAAOC,S,EAG1BC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,QAAQ,EAAKT,OACxB,EAAKG,SAAS,CACVL,QAAS,M,uDAKb,OACI,8BACI,uBAAMY,SAAUC,KAAKL,aAArB,UACI,kDACA,uBAAOM,KAAK,OAAOC,SAAUF,KAAKV,aAAcI,MAAOM,KAAKX,MAAMF,mB,GAtBhEgB,aCgCPC,E,4MA7Bbf,MAAQ,CACNX,MAAO,I,EAGTC,WAAa,SAACO,GACZ,IAAMR,EAAQ,EAAKW,MAAMX,MAAM2B,QAAO,SAAAtB,GACpC,OAAOA,EAAKG,KAAOA,KAErB,EAAKM,SAAS,CACZd,MAAOA,K,EAGXoB,QAAU,SAACf,GACTA,EAAKG,GAAK,EAAKG,MAAMX,MAAMG,OAAS,EACpC,IAAIH,EAAK,sBAAO,EAAKW,MAAMX,OAAlB,CAA0BK,IACnC,EAAKS,SAAS,CACZd,W,uDAIF,OACE,sBAAKM,UAAU,gBAAf,UACE,oBAAIA,UAAU,mBAAd,oBACA,cAAC,EAAD,CAAON,MAAOsB,KAAKX,MAAMX,MAAOC,WAAYqB,KAAKrB,aACjD,cAAC,EAAD,CAASmB,QAASE,KAAKF,iB,GAzBbK,aCQHG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0c0e0158.chunk.js","sourcesContent":["import React from 'react';\n\nconst Todos = ({ todos, deleteTodo }) => {\n    const todoList = todos.length ? (todos.map((todo) => {\n        return (\n            <div className='collection-item' key={todo.id}>\n                <span onClick={() => {deleteTodo(todo.id)}}>{todo.content}</span> \n            </div>\n        )\n    })) : (<p className='center'>No more Todos left!</p>);\n    return (\n        <div className=\"todos collection\">\n            {todoList}\n        </div>\n    )\n}\nexport default Todos;","import React, {Component} from 'react';\n\nclass AddTodo extends Component{\n    state = {\n        content: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n            content: e.target.value,\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state);\n        this.setState({\n            content: ''\n        });\n        \n    }\n    render(){\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Add new Todo:</label>\n                    <input type='text' onChange={this.handleChange} value={this.state.content} />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddTodo;","import React, { Component } from 'react';\nimport Todos from './Todos';\nimport AddTodo from './AddForm';\n\nclass App extends Component {\n  state = {\n    todos: [\n    ]\n  }\n  deleteTodo = (id) => {\n    const todos = this.state.todos.filter(todo => {\n      return todo.id !== id\n    });\n    this.setState({\n      todos: todos,\n    })\n  }\n  addTodo = (todo) => {\n    todo.id = this.state.todos.length + 1;\n    let todos = [...this.state.todos , todo];\n    this.setState({\n      todos\n    })\n  }\n  render() {\n    return (\n      <div className='App container'>\n        <h1 className='center blue-text'>To Dos</h1>\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo} />\n        <AddTodo addTodo={this.addTodo}/>\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}